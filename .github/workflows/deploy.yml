name: Push-to-EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Build and Publish
      run: |
        # Adicione seus comandos de build e publish aqui
        # Por exemplo: dotnet publish -c Release -o publish

    - name: Configure WinRM on AWS Windows Server
      run: |
        $session = Invoke-Command -ScriptBlock {
          winrm quickconfig 
          New-NetFirewallRule -Name WINRM-HTTP-In-TCP-DRTS -Enabled True -Direction Inbound -Protocol TCP -LocalPort 5985
        } -Credential (New-Object PSCredential -ArgumentList @("${{ secrets.SECRET_USER }}", (ConvertTo-SecureString -String "${{ secrets.SECRET_SSH }}" -AsPlainText -Force))) -ComputerName "${{ secrets.SECRET_HOST }}"

    - name: Copy files to AWS Windows Server
      run: |
        $sourcePath = "./Drts.Lives.API/API/bin/Release/net8.0/publish/*"
        $destinationPath = "${{ secrets.SECRET_TARGET_DIR }}"

        $session = New-PSSession -ComputerName "${{ secrets.SECRET_HOST }}" -Credential (New-Object PSCredential -ArgumentList @("${{ secrets.SECRET_USER }}", (ConvertTo-SecureString -String "${{ secrets.SECRET_SSH }}" -AsPlainText -Force))) -Authentication Basic -Port 5985 -UseSSL:$false
        Copy-Item -Path $sourcePath -Destination $destinationPath -ToSession $session -Recurse -Force
        Remove-PSSession $session
      env:
        AWS_SERVER_IP: "${{ secrets.SECRET_HOST }}"
        AWS_SERVER_USERNAME: "${{ secrets.SECRET_USER }}"
        AWS_SERVER_PASSWORD: "${{ secrets.SECRET_SSH }}"
